{"version":3,"sources":["constants/actionTypes.js","reducers/keepNotes.js","reducers/helper.js","reducers/people.js","reducers/isLoading.js","reducers/index.js","containers/Header.js","containers/TabPanel.js","constants/routing.constants.js","http/star-wars-default-config.js","containers/DetailedPerson.js","containers/ContentGridItem.js","containers/ContentGrid.js","constants/filter.constants.js","hooks/filterQueryParams.js","containers/FilterForm.js","selectors/people.js","actions/index.js","containers/PeoplePage.js","containers/StarWarsPageWrapper.js","saga/root.saga.js","index.js"],"names":["actionTypes","keepNotes","state","id","title","desc","tags","name","importancy","action","type","payload","mapUrlToId","el","splittedString","split","length","people","all","results","data","personId","map","item","index","starshipsIds","starships","planetId","homeworld","error","isLoading","combineReducers","useStyles","makeStyles","theme","root","flexGrow","zIndex","drawer","menuButton","marginRight","spacing","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","Header","props","classes","className","AppBar","Toolbar","IconButton","edge","aria-label","Typography","variant","noWrap","InputBase","placeholder","input","inputProps","TabPanel","children","value","other","component","role","hidden","aria-labelledby","Box","p","basePathForImages","axios","baseURL","timeout","toolbar","mixins","content","link","textDecoration","spinner","bottom","right","transform","media","card","chip","margin","DetailedGridPerson","fetchPersonById","useParams","useState","person","setPerson","setIsLoading","useEffect","a","get","result","console","err","fetchData","Fragment","isEmpty","Grid","Card","CardHeader","subheader","created","slice","CardMedia","image","CardContent","mass","hair_color","skin_color","eye_color","CardActions","to","Button","button","CircularProgress","ContentGridItem","date","url","useRouteMatch","ContentGrid","contentItems","key","container","sliderDefault","lower","bigger","useQueryFilterParams","query","URLSearchParams","useLocation","has","v","parseInt","nameIncludes","urlSearchParams","slider","formPaper","flexWrap","marginBottom","formInput","formInputText","formInputTextControl","FilterForm","history","useHistory","appliedLowerMass","appliedBiggerMass","appliedLowerHeight","appliedBiggerHeight","appliedNameIncludes","massSliderValue","setMassSliderValue","heightSliderValue","setHeightSliderValue","nameFilter","setNameFilterValue","lowerMass","biggerMass","lowerHeight","biggerHeight","handleApplyFiltersBtn","massAndHeighQueryString","queryParamString","push","Paper","d","gutterBottom","Slider","getAriaValueText","valueLabelDisplay","onChange","event","step","marks","min","max","TextField","label","target","onClick","getAllPeopleSelector","createSelector","getPeople","find","getPeopleSuccess","getPeopleFail","withRouter","connect","loading","dispatch","onGetPeople","filterQueryParams","currentFilterStringForName","isBetweenNumbers","current","lowerLimit","biggerLimit","Number","flowableFilterByMass","filter","identity","flowableFilterByHeight","fllowableFillterByIncludeText","toLowerCase","includes","transformedPeople","flow","background","paper","tabs","tabAttributes","tabValue","setTabValue","mappingOfURLandTabIndexes","tab","Tabs","tabIndex","Tab","exact","from","path","watchGetPeopleAction","rootSaga","response","put","log","takeEvery","getPeopleAction","sagaMiddleware","createSagaMiddleware","storeEnhancer","applyMiddleware","store","createStore","rootReducer","run","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.6baa6b53.chunk.js","sourcesContent":["export  const actionTypes = {\n    ADD_KEEP_NOTE: 'ADD_KEEP_NOTE',\n    GET_PEOPLE: 'GET_PEOPLE',\n    GET_PEOPLE_SUCCESS: 'GET_PEOPLE_SUCCESS',\n    GET_PEOPLE_FAIL: 'GET_PEOPLE_FAIL',\n    GET_PERSON: \"GET_PERSON\",\n    GET_PERSON_SUCCESS: \"GET_PERSON_SUCCESS\",\n    GET_PERSON_FAIL: \"GET_PERSON_FAIL\"\n};\n","import  {actionTypes } from '../constants/actionTypes';\nconst  keepNotes = (state = [{\n    id: 1,\n    title: 'Title',\n    desc: 'Description',\n    tags: [{\n        id: 0,\n        name: 'My'\n    }],\n    importancy: 1\n}], action) => {\n    switch (action.type) {\n        case actionTypes.ADD_KEEP_NOTE:\n            return [\n                ...state,\n                {\n                    id: action.id,\n                    title: action.payload.title,\n                    desc: action.payload.desc,\n                    tags: action.payload.tags ? action.payload.tags : [],\n                    importancy: action.payload.importancy,\n                }\n            ];\n        default:\n            return state;\n    }\n};\n\nexport default keepNotes;\n","import map from 'lodash/fp/map';\n\n// related entity comes as endpoint not as ID, so it's better to have ID's in\n// the reducer\nexport const  mapUrlToId = (el) => {\n     const splittedString = el.split('/');\n    return splittedString[splittedString.length - 2];\n};\n\n// TODO: redo this function, so it can be reused in reducer GET_PEOPLE_SUCCESS\nexport const  mapUrlsToIds = (data, entityName) => {\n    return map(item => {\n        return {\n            ...item,\n            [entityName]: map(mapUrlToId , item[entityName])\n        }\n    }, data);\n} ;\n\n","import {actionTypes} from \"../constants/actionTypes\";\nimport map from 'lodash/fp/map';\nimport { mapUrlToId} from \"./helper\";\n\nconst people = (state = {\n    all: {\n        results: []\n    },\n}, action) => {\n    switch (action.type) {\n        case actionTypes.GET_PEOPLE:\n            return {\n                ...state,\n            };\n        case actionTypes.GET_PEOPLE_SUCCESS:\n            const data = action.payload;\n            let personId = 0;\n            return {\n                ...state,\n                all: {\n                    ...data,\n                    results: map((item, index) => {\n\n                        return {\n                            ...item,\n                            id: ++personId,\n                            starshipsIds: map(mapUrlToId, item.starships),\n                            planetId: mapUrlToId(item.homeworld)\n                        }\n                    }, data.results),\n                },\n            };\n        case actionTypes.GET_PEOPLE_FAIL:\n            return {\n                ...state,\n                error: action.error,\n            };\n        default:\n            return state;\n    }\n};\nexport default people;\n","import {actionTypes} from \"../constants/actionTypes\";\n\nconst isLoading = (state = false, action) => {\n    switch (action.type) {\n        case actionTypes.GET_PEOPLE:\n            return true;\n        case actionTypes.GET_PEOPLE_SUCCESS:\n        case actionTypes.GET_PEOPLE_FAIL:\n            return false;\n        default:\n            return false;\n    }\n};\nexport default isLoading;\n","import keepNotes from \"./keepNotes\";\nimport people from \"./people\";\nimport { combineReducers } from 'redux'\nimport isLoading from \"./isLoading\";\n\nexport default combineReducers({\n    keepNotes,\n    people,\n    isLoading,\n});\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        width: theme.spacing(7),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 7),\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: 120,\n            '&:focus': {\n                width: 200,\n            },\n        },\n    },\n}));\n\nexport default function Header(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"fixed\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        className={classes.menuButton}\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        {props.title}\n                    </Typography>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{ 'aria-label': 'search' }}\n                        />\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nexport default function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            <Box p={3}>{children}</Box>\n        </Typography>\n    );\n}\n","export  const basePathForRouting = process.env.NODE_ENV === 'development' ? '/' : '/starwars';\nexport const basePathForImages = process.env.NODE_ENV === 'development' ? '/' : '/starwars/';\n","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://swapi.co/api/',\n    timeout: 60000,\n});\n","import React, {useEffect, useState} from \"react\";\nimport {makeStyles} from \"@material-ui/core\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from '@material-ui/core/Button';\nimport isEmpty from 'lodash/isEmpty';\nimport {Link, useParams} from \"react-router-dom\";\nimport {basePathForImages } from \"../constants/routing.constants\";\nimport axios from \"../http/star-wars-default-config\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst useStyles = makeStyles(theme => ({\n    toolbar: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    link: {\n        textDecoration: 'none',\n    },\n    spinner: {\n        position: 'fixed',\n        bottom: '50%',\n        right: '50%',\n        transform: 'translate(-50%, -50%)',\n    },\n    media: {\n        height: 220,\n        width: 253,\n    },\n    card: {\n        width: 400,\n        height: 525\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n}));\n\n export default function DetailedGridPerson({content, fetchPersonById}) {\n    const classes = useStyles();\n    let { id } = useParams();\n    const [person, setPerson] = useState({} );\n     const [isLoading, setIsLoading] = useState(false);\n\n    useEffect(()=> {\n        const fetchData = async () => {\n            setIsLoading(true);\n            try {\n                const result =  await axios.get(`/people/${id}/`);\n                setPerson(result.data);\n            } catch (e) {\n                console.err(e);\n            }\n            finally {\n                setIsLoading(false);\n            }\n        };\n        fetchData();\n    }, [id]);\n\n    return (\n     <React.Fragment>\n         {!isEmpty(person) &&\n        <Grid item>\n            <Card className={classes.card}>\n                <CardHeader\n                    action={\n                        <IconButton aria-label=\"settings\">\n                            <MoreVertIcon/>\n                        </IconButton>\n                    }\n                    title={person.name}\n                    subheader={person.created.slice(0, 10)}\n                />\n                <CardMedia\n                    className={classes.media}\n                    image={`${basePathForImages}Yoda.webp`}\n                    title=\"Paella dish\"\n                />\n                <CardContent>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        Mass of Person: {person.mass}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        Height of Person: {person.height}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        Hair color of Person: {person.hair_color}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        Skin color of Person: {person.skin_color}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        Eye color of Person: {person.eye_color}\n                    </Typography>\n                </CardContent>\n                <CardActions>\n                    <Link className={classes.link} to={`/people`} >\n                        <Button  variant=\"contained\" color=\"primary\" className={classes.button}>\n                            Go back\n                        </Button>\n                    </Link>\n                </CardActions>\n            </Card>\n        </Grid> }\n         <div className={classes.content}>\n             <div className={classes.toolbar}/>\n             {\n                 isLoading   && <CircularProgress className={classes.spinner}/>\n             }\n         </div>\n     </React.Fragment>\n    );\n}\n\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from '@material-ui/core/Button';\nimport {Link, useRouteMatch} from \"react-router-dom\";\nimport {basePathForImages} from \"../constants/routing.constants\";\n\nconst useStyles = makeStyles(theme => ({\n    media: {\n        height: 220,\n        width: 253,\n    },\n    card: {\n        width: 400,\n        height: 425\n    },\n    link: {\n        textDecoration: 'none',\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n}));\nexport default function ContentGridItem({title, date, id, content}) {\n    const classes = useStyles();\n    let { url } = useRouteMatch();\n    return (\n        <Grid item>\n            <Card className={classes.card}>\n                <CardHeader\n                    action={\n                        <IconButton aria-label=\"settings\">\n                            <MoreVertIcon/>\n                        </IconButton>\n                    }\n                    title={title}\n                    subheader={date}\n                />\n                <CardMedia\n                    className={classes.media}\n                    image={`${basePathForImages}Yoda.webp`}\n                    title=\"Paella dish\"\n                />\n                <CardContent>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                       Mass of Person: {content.mass}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        Height of Person: {content.height}\n                    </Typography>\n\n                 </CardContent>\n                <CardActions>\n                    <Link className={classes.link} to={`${url}/${id}`} >\n                    <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n                        Go to Details\n                    </Button>\n                    </Link>\n                </CardActions>\n            </Card>\n        </Grid>\n    );\n}\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport isEmpty from 'lodash/isEmpty';\nimport map from 'lodash/fp/map';\nimport ContentGridItem from \"./ContentGridItem\";\n\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    toolbar: theme.mixins.toolbar,\n}));\n\nexport default function ContentGrid(props) {\n    const classes = useStyles();\n    const contentItems = map((item) => {\n        return (\n            <ContentGridItem key={item.name} id={item.id} title={item.name} date={item.created.slice(0, 10)} content={item}/>\n        );\n    }, props.data);\n    return (\n        <main className={classes.content}>\n            <div className={classes.toolbar}/>\n            {isEmpty(props.data) && <div>No data for Filters</div>}\n            <Grid container>\n                {contentItems}\n            </Grid>\n        </main>\n    )\n}\n","export const sliderDefault = {\n  mass: {\n      lower: 0,\n      bigger: 200,\n  },\n  height: {\n      lower: 0,\n      bigger: 250\n  }\n};\n","import {useLocation} from \"react-router-dom\";\nimport {sliderDefault} from \"../constants/filter.constants\";\n\nexport function useQueryFilterParams() {\n    const query = new URLSearchParams(useLocation().search);\n    return {\n        mass: query.has('mass') ?\n            query.get('mass').split(',').map(v => parseInt(v, 10)) :\n            [sliderDefault.mass.lower, sliderDefault.mass.bigger],\n        height: query.has('height') ?\n            query.get('height').split(',').map(v => parseInt(v, 10))\n            : [sliderDefault.height.lower, sliderDefault.height.bigger],\n        nameIncludes: query.has('nameIncludes') ? query.get('nameIncludes') : '',\n        urlSearchParams: query\n    }\n}\n","import React, {useState} from 'react';\n\nimport {makeStyles} from \"@material-ui/core\";\nimport {useHistory} from \"react-router-dom\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Box from \"@material-ui/core/Box\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {sliderDefault} from \"../constants/filter.constants\";\nimport {useQueryFilterParams} from \"../hooks/filterQueryParams\";\n\n\nconst useStyles = makeStyles(theme => ({\n    slider: {\n        width: 400\n    },\n    formPaper: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        marginBottom: theme.spacing(2)\n    },\n    formInput: {\n        width: 400,\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(4),\n        marginBottom: theme.spacing(4)\n    },\n    formInputText: {\n        width: 400,\n        marginRight: theme.spacing(4),\n        marginBottom: theme.spacing(4)\n    },\n    formInputTextControl: {\n        width: 400,\n        marginRight: theme.spacing(4),\n    },\n    button: {\n        marginRight: theme.spacing(4),\n\n    },\n    toolbar: theme.mixins.toolbar,\n}));\n\n\nexport default function FilterForm(props) {\n    const classes = useStyles();\n    const history = useHistory();\n    const query = useQueryFilterParams();\n    const [appliedLowerMass, appliedBiggerMass] = query.mass;\n    const [appliedLowerHeight, appliedBiggerHeight] = query.height;\n    const appliedNameIncludes = query.nameIncludes;\n    const [massSliderValue, setMassSliderValue] = useState(query.mass);\n    const [heightSliderValue, setHeightSliderValue] = useState(query.height);\n\n    const [nameFilter, setNameFilterValue] = useState(query.nameIncludes);\n    const [lowerMass, biggerMass] = massSliderValue;\n    const [lowerHeight, biggerHeight] = heightSliderValue;\n    const onNameFilterChange = (event) => {\n        setNameFilterValue(event.target.value);\n    };\n    const onMassFilterChange = (event, value) => {\n        setMassSliderValue(value);\n    };\n\n    const onHeightFilterChange = (event, value) => {\n        setHeightSliderValue(value);\n    };\n\n    function massSliderLabel(value) {\n        return `${value} Mass`;\n    }\n\n    function heightSliderLabel(value) {\n        return `${value} Height`;\n    }\n\n    const handleApplyFiltersBtn = () => {\n        const massAndHeighQueryString = `?mass=${lowerMass},${biggerMass}&height=${lowerHeight},${biggerHeight}`;\n        const queryParamString = nameFilter === '' ? massAndHeighQueryString\n            : `${massAndHeighQueryString}&nameIncludes=${nameFilter}`;\n        history.push(queryParamString);\n    };\n\n    const handleResetFiltersBtn = () => {\n        const queryParamString = `?mass=${sliderDefault.mass.lower},${sliderDefault.mass.bigger}&height=${sliderDefault.height.lower},${sliderDefault.height.bigger}`;\n        setMassSliderValue([sliderDefault.mass.lower, sliderDefault.mass.bigger]);\n        setHeightSliderValue([sliderDefault.height.lower, sliderDefault.height.bigger]);\n        // TODO clean nameFilter correcty\n        setNameFilterValue('');\n        history.push(queryParamString);\n    };\n    const createButton = () => {\n        // TODO: add logic when you need to disable button\n        const isFilterApplied = true;\n        return (\n            <React.Fragment>\n                {isFilterApplied ?\n                    (\n                        <Button variant=\"contained\" color=\"primary\" onClick={handleApplyFiltersBtn}\n                                className={classes.button}>\n                            Apply Filters\n                        </Button>) :\n                    (<Button disabled={isFilterApplied} variant=\"contained\" color=\"primary\" className={classes.button}>\n                            Apply Filters\n                        </Button>\n                    )}\n            </React.Fragment>\n        );\n    };\n\n    return (\n        <>\n            <Paper className={classes.formPaper}>\n                <Box className={classes.formInput}>\n                    <Typography d=\"range-slider\" gutterBottom>\n                        Mass is between\n                    </Typography>\n                    <Slider\n                        className={classes.slider}\n                        value={massSliderValue}\n                        getAriaValueText={massSliderLabel}\n                        aria-labelledby=\"range-slider\"\n                        valueLabelDisplay=\"auto\"\n                        onChange={onMassFilterChange}\n                        step={10}\n                        marks\n                        min={sliderDefault.mass.lower}\n                        max={sliderDefault.mass.bigger}\n                    />\n                </Box>\n                <Box className={classes.formInput}>\n                    <Typography d=\"range-slider\" gutterBottom>\n                        Height is between\n                    </Typography>\n                    <Slider\n                        className={classes.slider}\n                        value={heightSliderValue}\n                        getAriaValueText={heightSliderLabel}\n                        aria-labelledby=\"range-slider\"\n                        valueLabelDisplay=\"auto\"\n                        onChange={onHeightFilterChange}\n                        step={10}\n                        marks\n                        min={sliderDefault.height.lower}\n                        max={sliderDefault.height.bigger}\n                    />\n                </Box>\n                <Box className={classes.formInputText}>\n                    <TextField\n                        id=\"standard-basic\"\n                        className={classes.formInputTextControl}\n                        label=\"Name includes such letters\"\n                        value={nameFilter}\n                        margin=\"normal\"\n                        onChange={onNameFilterChange}/>\n                </Box>\n            </Paper>\n            <Paper className={classes.formPaper}>\n                {createButton()}\n                <Button variant=\"contained\" onClick={handleResetFiltersBtn} className={classes.button}>\n                    Reset to default\n                </Button>\n            </Paper>\n            <Paper className={classes.formPaper}>\n                Filtering entered: Mass entered between {lowerMass} and {biggerMass} AND\n                Height is entered between {lowerHeight} and {biggerHeight} AND\n                {nameFilter === '' ? ' No Name Filters' : ` Name filter is ${nameFilter}`}\n            </Paper>\n            <Paper className={classes.formPaper}>\n                Filters applied: Mass entered between {appliedLowerMass} and {appliedBiggerMass} AND\n                Height is entered between {appliedLowerHeight} and {appliedBiggerHeight} AND\n                {appliedNameIncludes === '' ? ' No Name Filters' : ` Name filter is ${appliedNameIncludes}`}\n            </Paper>\n        </>\n    );\n}\n","import { createSelector } from 'reselect';\nimport get from 'lodash/fp/get';\nimport find from 'lodash/fp/find';\n\nconst allPeople = (state) => get('people.all.results',state);\n\nexport const getAllPeopleSelector = createSelector(\n    allPeople,\n    people => people\n);\n\nexport const getPersonById = createSelector(\n    getAllPeopleSelector,\n    people => find((person) => person.id, people)\n);\n","import {actionTypes} from '../constants/actionTypes';\n\nlet id = 0;\nexport const addKeepNote = (payload) => {\n    return {\n        id: 'Note' + id++,\n        type: actionTypes.ADD_KEEP_NOTE,\n        payload,\n    };\n};\n\nexport const getPeople = () => {\n  return  {\n      type: actionTypes.GET_PEOPLE,\n  }\n};\n\nexport const getPerson = (id) => {\n    return {\n        type: actionTypes.GET_PERSON,\n        payload: {\n             id\n        }\n    }\n};\nexport const getPersonSuccess = (payload) => {\n    return {\n        type: actionTypes.GET_PERSON_SUCCESS,\n        payload\n    }\n};\n\nexport const getPersonFail = (error) => {\n    return {\n        type: actionTypes.GET_PERSON_FAIL,\n        error\n    }\n};\n\nexport const getPeopleSuccess = (payload) =>{\n    return  {\n        type: actionTypes.GET_PEOPLE_SUCCESS,\n        payload,\n    }\n};\n\nexport const getPeopleFail = (error) =>{\n    return  {\n        type: actionTypes.GET_PEOPLE_FAIL,\n        error,\n    }\n};\n\n\n","import React, {useEffect } from 'react';\nimport ContentGrid from \"./ContentGrid\";\nimport FilterForm from \"./FilterForm\";\nimport {getAllPeopleSelector} from \"../selectors/people\";\nimport {getPeople} from \"../actions\";\nimport {withRouter} from \"react-router-dom\";\nimport filter from \"lodash/fp/filter\";\nimport identity from \"lodash/fp/identity\";\nimport flow from \"lodash/fp/flow\";\nimport {useQueryFilterParams} from \"../hooks/filterQueryParams\";\nimport {connect} from \"react-redux\";\nimport {makeStyles} from \"@material-ui/core\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\n\nconst useStyles = makeStyles(theme => ({\n    toolbar: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    spinner: {\n        position: 'fixed',\n        bottom: '50%',\n        right: '50%',\n        transform: 'translate(-50%, -50%)',\n    }\n}));\n\nfunction PeoplePage(props) {\n    const classes = useStyles();\n    const filterQueryParams = useQueryFilterParams();\n    const urlSearchParams = useQueryFilterParams().urlSearchParams;\n    const [lowerMass, biggerMass] = filterQueryParams.mass;\n    const [lowerHeight, biggerHeight] = filterQueryParams.height;\n    const currentFilterStringForName = filterQueryParams.nameIncludes;\n    const isBetweenNumbers = (current, lowerLimit, biggerLimit) => {\n        return Number(current) >= Number(lowerLimit) &&\n            Number(current) <= Number(biggerLimit);\n    };\n    const flowableFilterByMass = urlSearchParams.has('mass') ?\n        filter((person) => isBetweenNumbers(person.mass, lowerMass, biggerMass))\n        : identity;\n    const flowableFilterByHeight = urlSearchParams.has('height') ?\n        filter((person) => isBetweenNumbers(person.height, lowerHeight, biggerHeight))\n        : identity;\n    const fllowableFillterByIncludeText = currentFilterStringForName === '' ? identity :\n        filter((person) => person.name.toLowerCase().includes(currentFilterStringForName.toLowerCase()));\n\n    const transformedPeople = flow(\n        flowableFilterByMass,\n        flowableFilterByHeight,\n        fllowableFillterByIncludeText\n    )(props.people);\n    useEffect(() => {\n        const getPeople = props.onGetPeople;\n        getPeople();\n    }, [props.onGetPeople]);\n    return (\n        <React.Fragment>\n            <FilterForm/>\n            <ContentGrid data={transformedPeople}/>\n            < div\n                className={classes.content}>\n                < div\n                    className={classes.toolbar}\n                />\n                {\n                    props.loading && <CircularProgress className={classes.spinner}/>\n                }\n            </div>\n        </React.Fragment>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        people: getAllPeopleSelector(state),\n        loading: state.isLoading\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        onGetPeople: () => dispatch(getPeople()),\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(PeoplePage));\n","import React, { useState} from 'react';\nimport Header from \"./Header\";\nimport {makeStyles} from \"@material-ui/core\";\nimport {withRouter, Route, Switch, useHistory, Redirect} from \"react-router-dom\";\nimport TabPanel from \"./TabPanel\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport DetailedGridPerson from \"./DetailedPerson\";\n\nimport PeoplePage from \"./PeoplePage\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    slider: {\n        width: 400\n    },\n    formPaper: {\n        display: 'flex'\n    },\n    toolbar: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    tabs: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n}));\n\nfunction tabAttributes(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nfunction StarWarsPageWrapper(props) {\n    const classes = useStyles();\n    const [tabValue, setTabValue] = useState(0);\n    const history = useHistory();\n    const mappingOfURLandTabIndexes = [\n        '/people',\n        '/starships',\n        '/planets'\n    ];\n    const handleTabChange = (event, tabIndex) => {\n        setTabValue(tabIndex);\n        history.push(mappingOfURLandTabIndexes[tabIndex])\n    };\n\n\n    return (\n        <div className={classes.root}>\n            <Header title={'Star Wars'}/>\n            <div className={classes.tab}>\n                <div className={classes.toolbar}/>\n                <div>\n\n                </div>\n                <Tabs value={tabValue} onChange={handleTabChange} aria-label=\"simple tabs example\">\n                        <Tab label=\"People\" {...tabAttributes(0)} />\n                        <Tab label=\"Starships\" {...tabAttributes(1)} />\n                        <Tab label=\"Planet\" {...tabAttributes(2)} />\n                </Tabs>\n\n                <TabPanel value={tabValue} index={0}>\n                    <Switch>\n                        <Redirect exact from={'/'} to={'/people'}/>\n                        <Route exact path={'/people'}>\n                            <PeoplePage/>\n                        </Route>\n                        <Route path={`/people/:id`}>\n                            <DetailedGridPerson/>\n                        </Route>\n                    </Switch>\n                </TabPanel>\n                <TabPanel value={tabValue} index={1}>\n                    <div>Somme StarWars to be here</div>\n                </TabPanel>\n                <TabPanel value={tabValue} index={2}>\n                   <div>Some planets to be here</div>\n                </TabPanel>\n            </div>\n        </div>\n    );\n}\n\n\nexport default withRouter(StarWarsPageWrapper);\n","import { put, takeEvery, all } from 'redux-saga/effects'\n\nimport axios from \"../http/star-wars-default-config\";\nimport {getPeopleSuccess, getPeople as getPeopleAction, getPeopleFail} from \"../actions\";\n\nfunction* getPeople() {\n    try {\n        const response = yield axios.get('/people/');\n        yield put( getPeopleSuccess(response.data) );\n    } catch(err) {\n        console.log(err)\n        yield put( getPeopleFail(err) );\n    }\n}\n\nfunction*  watchGetPeopleAction() {\n    yield takeEvery(getPeopleAction().type, getPeople);\n}\n\nexport default function* rootSaga() {\n    yield all([\n        watchGetPeopleAction(),\n    ]);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n    BrowserRouter as Router,\n} from \"react-router-dom\";\nimport './index.css';\nimport {applyMiddleware, createStore} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from './reducers';\nimport createSagaMiddleware from 'redux-saga'\nimport StarWarsPageWrapper from \"./containers/StarWarsPageWrapper\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport rootSaga from \"./saga/root.saga\";\nimport {basePathForRouting} from \"./constants/routing.constants\";\n\n\nconst sagaMiddleware = createSagaMiddleware();\nconst storeEnhancer = process.env.NODE_ENV === 'development' ?\n    composeWithDevTools(applyMiddleware(sagaMiddleware))\n    : applyMiddleware(sagaMiddleware);\n\n\nconst store = createStore(rootReducer,\n    storeEnhancer);\n\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router basename={basePathForRouting}>\n                    <StarWarsPageWrapper/>\n        </Router>\n    </Provider>,\n    document.getElementById('root'));\n"],"sourceRoot":""}