{"version":3,"sources":["constants/actionTypes.js","reducers/keepNotes.js","reducers/helper.js","reducers/people.js","reducers/isLoading.js","reducers/index.js","containers/Header.js","actions/index.js","containers/TabPanel.js","containers/ContentGridItem.js","containers/ContentGrid.js","containers/StarWarsPageWrapper.js","http/star-wars-default-config.js","saga/root.saga.js","index.js"],"names":["actionTypes","keepNotes","state","id","title","desc","tags","name","importancy","action","type","payload","mapUrlToId","el","splittedString","split","length","people","all","results","filters","data","map","item","visible","starshipsIds","starships","planetId","homeworld","error","get","min","max","mapped","flow","Number","mass","isLoading","combineReducers","useStyles","makeStyles","theme","root","flexGrow","zIndex","drawer","menuButton","marginRight","spacing","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","Header","props","classes","className","AppBar","Toolbar","IconButton","edge","aria-label","Typography","variant","noWrap","InputBase","placeholder","input","inputProps","getPeople","getPeopleSuccess","getPeopleFail","TabPanel","children","value","index","other","component","role","hidden","aria-labelledby","Box","p","media","card","chip","margin","ContentGridItem","date","content","Grid","Card","CardHeader","subheader","CardMedia","image","CardContent","CardActions","Button","button","toolbar","mixins","ContentGrid","console","log","contentItems","key","createdTime","isEmpty","container","background","paper","slider","tabs","spinner","bottom","right","transform","fab","tabAttributes","withRouter","connect","filter","v","loading","dispatch","debouncedDispatch","debounce","onGetPeople","onMassFilterChange","useState","tabValue","setValue","sliderVal","setSliderVal","useEffect","tab","Tabs","onChange","event","newValue","Tab","label","Paper","d","gutterBottom","Slider","getAriaValueText","valueLabelDisplay","step","marks","filterChanged","CircularProgress","axios","baseURL","timeout","watchGetPeopleAction","rootSaga","response","put","takeEvery","getPeopleAction","sagaMiddleware","createSagaMiddleware","storeEnhancer","applyMiddleware","store","createStore","rootReducer","run","ReactDOM","render","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.7d63b8f5.chunk.js","sourcesContent":["export  const actionTypes = {\n    ADD_KEEP_NOTE: 'ADD_KEEP_NOTE',\n    GET_PEOPLE: 'GET_PEOPLE',\n    GET_PEOPLE_SUCCESS: 'GET_PEOPLE_SUCCESS',\n    GET_PEOPLE_FAIL: 'GET_PEOPLE_FAIL',\n    FILTER_PEOPLE_BY_MASS: 'FILTER_PEOPLE_BY_MASS'\n};\n","import  {actionTypes } from '../constants/actionTypes';\nconst  keepNotes = (state = [{\n    id: 1,\n    title: 'Title',\n    desc: 'Description',\n    tags: [{\n        id: 0,\n        name: 'My'\n    }],\n    importancy: 1\n}], action) => {\n    switch (action.type) {\n        case actionTypes.ADD_KEEP_NOTE:\n            return [\n                ...state,\n                {\n                    id: action.id,\n                    title: action.payload.title,\n                    desc: action.payload.desc,\n                    tags: action.payload.tags ? action.payload.tags : [],\n                    importancy: action.payload.importancy,\n                }\n            ];\n        default:\n            return state;\n    }\n};\n\nexport default keepNotes;\n","import map from 'lodash/fp/map';\n\n// related entity comes as endpoint not as ID, so it's better to have ID's in\n// the reducer\nexport const  mapUrlToId = (el) => {\n     const splittedString = el.split('/');\n    return splittedString[splittedString.length - 2];\n};\n\n// TODO: redo this function, so it can be reused in reducer GET_PEOPLE_SUCCESS\nexport const  mapUrlsToIds = (data, entityName) => {\n    return map(item => {\n        return {\n            ...item,\n            [entityName]: map(mapUrlToId , item[entityName])\n        }\n    }, data);\n} ;\n\n","import {actionTypes} from \"../constants/actionTypes\";\nimport map from 'lodash/fp/map';\nimport get from 'lodash/get';\nimport flow from 'lodash/flow';\nimport { mapUrlToId} from \"./helper\";\n\nconst people = (state = {\n    all: {\n        results: []\n    },\n    filters: {}\n}, action) => {\n    switch (action.type) {\n        case actionTypes.GET_PEOPLE:\n            return {\n                ...state,\n            };\n        case actionTypes.GET_PEOPLE_SUCCESS:\n            const data = action.payload;\n\n            return {\n                ...state,\n                all: {\n                    ...data,\n                    results: map((item) => {\n                        return {\n                            ...item,\n                            visible: true,\n                            starshipsIds: map(mapUrlToId, item.starships),\n                            planetId: mapUrlToId(item.homeworld)\n                        }\n                    }, data.results),\n                },\n            };\n        case actionTypes.GET_PEOPLE_FAIL:\n            return {\n                ...state,\n                error: action.error,\n            };\n        case actionTypes.FILTER_PEOPLE_BY_MASS:\n            const [min, max] = get(action, 'payload.mass');\n            const mapped =  flow(\n            map((item) => {\n                    const isBetweenMinAndMax = Number(item.mass) >=  Number(min) &&  Number(item.mass) <= Number(max);\n                    return !isBetweenMinAndMax ? {...item, visible: false} : { ...item, visible: true};\n                  }),\n                )(state.all.results);\n            return {\n               ...state,\n                all: {\n                   ...state.all,\n                    results: mapped,\n                },\n                filters: get(action, 'payload'),\n             };\n        default:\n            return state;\n    }\n};\nexport default people;\n","import {actionTypes} from \"../constants/actionTypes\";\n\nconst isLoading = (state = false, action) => {\n    switch (action.type) {\n        case actionTypes.GET_PEOPLE:\n            return true;\n        case actionTypes.GET_PEOPLE_SUCCESS:\n        case actionTypes.GET_PEOPLE_FAIL:\n            return false;\n        default:\n            return false;\n    }\n};\nexport default isLoading;\n","import keepNotes from \"./keepNotes\";\nimport people from \"./people\";\nimport { combineReducers } from 'redux'\nimport isLoading from \"./isLoading\";\n\nexport default combineReducers({\n    keepNotes,\n    people,\n    isLoading,\n});\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        zIndex: theme.zIndex.drawer + 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n        display: 'none',\n        [theme.breakpoints.up('sm')]: {\n            display: 'block',\n        },\n    },\n    search: {\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: fade(theme.palette.common.white, 0.25),\n        },\n        marginLeft: 0,\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(1),\n            width: 'auto',\n        },\n    },\n    searchIcon: {\n        width: theme.spacing(7),\n        height: '100%',\n        position: 'absolute',\n        pointerEvents: 'none',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n    inputInput: {\n        padding: theme.spacing(1, 1, 1, 7),\n        transition: theme.transitions.create('width'),\n        width: '100%',\n        [theme.breakpoints.up('sm')]: {\n            width: 120,\n            '&:focus': {\n                width: 200,\n            },\n        },\n    },\n}));\n\nexport default function Header(props) {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"fixed\">\n                <Toolbar>\n                    <IconButton\n                        edge=\"start\"\n                        className={classes.menuButton}\n                        color=\"inherit\"\n                        aria-label=\"open drawer\"\n                    >\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography className={classes.title} variant=\"h6\" noWrap>\n                        {props.title}\n                    </Typography>\n                    <div className={classes.search}>\n                        <div className={classes.searchIcon}>\n                            <SearchIcon />\n                        </div>\n                        <InputBase\n                            placeholder=\"Search…\"\n                            classes={{\n                                root: classes.inputRoot,\n                                input: classes.inputInput,\n                            }}\n                            inputProps={{ 'aria-label': 'search' }}\n                        />\n                    </div>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","import {actionTypes} from '../constants/actionTypes';\n\nlet id = 0;\nexport const addKeepNote = (payload) => {\n    return {\n        id: 'Note' + id++,\n        type: actionTypes.ADD_KEEP_NOTE,\n        payload,\n    };\n};\n\nexport const getPeople = () => {\n  return  {\n      type: actionTypes.GET_PEOPLE,\n  }\n};\n\nexport const getPeopleSuccess = (payload) =>{\n    return  {\n        type: actionTypes.GET_PEOPLE_SUCCESS,\n        payload,\n    }\n};\n\nexport const getPeopleFail = (error) =>{\n    return  {\n        type: actionTypes.GET_PEOPLE_FAIL,\n        error,\n    }\n};\n\nexport const filterPeopleByMASS = (payload) =>{\n    return  {\n        type: actionTypes.FILTER_PEOPLE_BY_MASS,\n        payload,\n    }\n};\n","import React from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\n\nexport default function TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            <Box p={3}>{children}</Box>\n        </Typography>\n    );\n}\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core\";\n\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n    media: {\n        height: 220,\n        width: 253,\n    },\n    card: {\n        width: 400,\n        height: 425\n    },\n    chip: {\n        margin: theme.spacing(0.5),\n    },\n}));\nexport default function ContentGridItem({title, date, content}) {\n    const classes = useStyles();\n    return (\n        <Grid item>\n            <Card className={classes.card}>\n                <CardHeader\n                    action={\n                        <IconButton aria-label=\"settings\">\n                            <MoreVertIcon/>\n                        </IconButton>\n                    }\n                    title={title}\n                    subheader={date}\n                />\n                <CardMedia\n                    className={classes.media}\n                    image=\"Yoda.webp\"\n                    title=\"Paella dish\"\n                />\n                <CardContent>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                       Mass of Person: {content.mass}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        Height of Person: {content.height}\n                    </Typography>\n\n                 </CardContent>\n                <CardActions>\n                    <Button variant=\"contained\" color=\"primary\" className={classes.button}>\n                        Go to Details\n                    </Button>\n                </CardActions>\n            </Card>\n        </Grid>\n    );\n}\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core\";\nimport Grid from \"@material-ui/core/Grid\";\nimport isEmpty from 'lodash/isEmpty';\nimport map from 'lodash/fp/map';\nimport ContentGridItem from \"./ContentGridItem\";\n\n\nconst useStyles = makeStyles(theme => ({\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    toolbar: theme.mixins.toolbar,\n}));\n\nexport default function ContentGrid(props) {\n    const classes = useStyles();\n\n    console.log('propsChanged', props);\n    const contentItems = map((item) => {\n        return (\n            <ContentGridItem key={item.name} title={item.name} date={item.createdTime} content={item}/>\n        );\n    }, props.data);\n    return (\n        <main className={classes.content}>\n            <div className={classes.toolbar}/>\n            {isEmpty(props.data) && <div>Loading content ...</div>}\n            <Grid container>\n                {contentItems}\n            </Grid>\n        </main>\n    )\n}\n","import React, {useEffect, useState} from 'react';\nimport Header from \"./Header\";\nimport debounce from 'lodash/debounce';\n\nimport filter from 'lodash/fp/filter';\nimport { connect } from 'react-redux';\nimport {makeStyles} from \"@material-ui/core\";\n\nimport {filterPeopleByMASS, getPeople} from \"../actions\";\nimport { withRouter } from \"react-router-dom\"\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport TabPanel from \"./TabPanel\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport ContentGrid from \"./ContentGrid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Slider from \"@material-ui/core/Slider\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n    },\n    slider: {\n      width: 400\n    },\n    toolbar: theme.mixins.toolbar,\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    tabs: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n    },\n    spinner: {\n        position: 'fixed',\n        bottom: '50%',\n        right: '50%',\n        transform: 'translate(-50%, -50%)',\n    },\n    fab: {\n        position: 'fixed',\n        bottom: theme.spacing(3),\n        right: theme.spacing(6),\n    },\n}));\nfunction tabAttributes(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nfunction StarWarsPageWrapper(props) {\n    const classes = useStyles();\n    const [tabValue, setValue] = useState(0);\n    const [sliderVal, setSliderVal] = useState([50, 140]);\n\n    useEffect(() => {\n      const getPeople =   props.onGetPeople;\n      getPeople();\n    }, [props.onGetPeople]);\n\n    const onMassFilterChange = (event, value) => {\n        setSliderVal(value);\n        props.onMassFilterChange({mass: value})\n    };\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n    function valuetext(value) {\n        return `${value} Mass`;\n    }\n\n    return (\n        <div className={classes.root}>\n            <Header title={'Star Wars'}/>\n            <div className={classes.tab}>\n                <div className={classes.toolbar}/>\n                <Tabs value={tabValue} onChange={handleChange} aria-label=\"simple tabs example\">\n                    <Tab label=\"People\" {...tabAttributes(0)} />\n                    <Tab label=\"Starships\" {...tabAttributes(1)} />\n                    <Tab label=\"Planet\" {...tabAttributes(2)} />\n                </Tabs>\n\n                <TabPanel value={tabValue} index={0}>\n                    <Paper >\n                        <Typography d=\"range-slider\" gutterBottom>\n                            Mass\n                        </Typography>\n                        <Slider\n                            className={classes.slider}\n                            value={sliderVal}\n                            getAriaValueText={valuetext}\n                            aria-labelledby=\"range-slider\"\n                            valueLabelDisplay=\"auto\"\n                            onChange = {onMassFilterChange}\n                            step={10}\n                            marks\n                            min={30}\n                            max={200}\n                        />\n                    </Paper>\n                        <ContentGrid filterChanged={sliderVal} data={props.people} />\n                </TabPanel>\n                <TabPanel value={tabValue} index={1}>\n                    <ContentGrid data={props.people}/>\n                </TabPanel>\n                <TabPanel value={tabValue} index={2}>\n                    <ContentGrid data={props.people}/>\n                </TabPanel>\n            </div>\n\n\n            <div className={classes.content}>\n                <div className={classes.toolbar}/>\n                { props.loading && <CircularProgress className={classes.spinner} /> }\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        people: filter(v => v.visible, state.people.all.results),\n        loading: state.isLoading\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    const debouncedDispatch = debounce(dispatch, 300);\n    return {\n        onGetPeople: () => dispatch(getPeople()),\n        onMassFilterChange: (filter)=> debouncedDispatch(filterPeopleByMASS(filter))\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(StarWarsPageWrapper));\n","import axios from 'axios';\n\nexport default axios.create({\n    baseURL: 'https://swapi.co/api/',\n    timeout: 60000,\n});\n","import { put, takeEvery, all } from 'redux-saga/effects'\n\nimport axios from \"../http/star-wars-default-config\";\nimport {getPeopleSuccess, getPeople as getPeopleAction, getPeopleFail} from \"../actions\";\n\nfunction* getPeople() {\n    try {\n        const response = yield axios.get('/people/');\n        yield put( getPeopleSuccess(response.data) );\n    } catch(err) {\n        console.log(err)\n        yield put( getPeopleFail(err) );\n    }\n}\n\nfunction*  watchGetPeopleAction() {\n    yield takeEvery(getPeopleAction().type, getPeople);\n}\n\nexport default function* rootSaga() {\n    yield all([\n        watchGetPeopleAction(),\n    ]);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport './index.css';\nimport {applyMiddleware, createStore} from 'redux'\nimport {Provider} from 'react-redux'\nimport rootReducer from './reducers';\nimport createSagaMiddleware from 'redux-saga'\nimport StarWarsPageWrapper from \"./containers/StarWarsPageWrapper\";\nimport {composeWithDevTools} from \"redux-devtools-extension\";\nimport rootSaga from \"./saga/root.saga\";\n\n\nconst sagaMiddleware = createSagaMiddleware();\nconst storeEnhancer = process.env.NODE_ENV === 'development' ?\n    composeWithDevTools(applyMiddleware(sagaMiddleware))\n    : applyMiddleware(sagaMiddleware);\n\n\nconst store = createStore(rootReducer,\n    storeEnhancer);\n\n\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router>\n            <Switch>\n                <Route exact path=\"/starwars\">\n                    <StarWarsPageWrapper/>\n                </Route>\n            </Switch>\n        </Router>\n    </Provider>,\n    document.getElementById('root'));\n"],"sourceRoot":""}